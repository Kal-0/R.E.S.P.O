# ü§ñ RESPO: Murphy, o Rob√¥ inspirado no jogo REPO

**RESPO (REPO + ESP)** √© um projeto de rob√≥tica interativa inspirado no universo do jogo de terror *REPO*, uma experi√™ncia cooperativa no estilo *Lethal Company*. Nosso rob√¥, carinhosamente chamado de **Murphy**, homenageia a **Lei de Murphy** ‚Äî pois, durante o desenvolvimento, tudo que podia dar errado‚Ä¶ deu! üòÖ

Murphy √© mais do que um rob√¥: √© uma criatura interativa que reage ao ambiente e aos comandos do usu√°rio, replicando de forma f√≠sica a experi√™ncia social e ca√≥tica dos personagens do jogo.

---

## üß† Funcionalidades Principais

### ü©∏ Sistema de Vida com Feedback Visual e Auditivo
- Dois bot√µes permitem **adicionar ou remover vida**.
- Os LEDs **verdes e vermelhos** indicam o n√≠vel de vida atual.
- Os **olhos RGB** piscam em vermelho ao perder vida.
- Um **servo motor** abre a boca do rob√¥.
- Um **buzzer** emite um som diferente para adicionar ou remover vida.

### üî¶ Lanterna com Sensor de Luminosidade
- Um **LDR** monitora o n√≠vel de luz no ambiente.
- Em ambientes escuros, um **LED azul de alto brilho** acende automaticamente, como uma lanterna.

### üò† Emo√ß√µes via Potenci√¥metro
- O **potenci√¥metro** ajusta o ‚Äúestado emocional‚Äù do rob√¥:
  - Altera a cor dos olhos RGB.
  - Abre a boca com diferentes √¢ngulos via servo.
  - Modifica a frequ√™ncia do som emitido pelo buzzer.
  - Em n√≠veis altos, Murphy fica "furioso": olhos vermelhos e som agudo.

### üåê Controle Remoto via Firebase
- O rob√¥ est√° conectado √† internet atrav√©s do **Wi-Fi da ESP32**.
- Integramos o projeto ao **Firebase** para controle remoto.
- Criamos um **frontend web** onde √© poss√≠vel acessar remotamente o rob√¥.
- No site, √© poss√≠vel ativar o **modo online** e controlar todas as a√ß√µes remotamente.

---

## üñ•Ô∏è Monitoramento via Serial e Firebase

Al√©m das funcionalidades f√≠sicas, o rob√¥ **Murphy** permite **monitoramento completo em tempo real** via terminal serial e nuvem:

- Sempre que a **vida √© alterada**, o novo valor √© exibido no terminal.
- O valor do **potenci√¥metro** e do **sensor de luminosidade (LDR)** s√£o constantemente monitorados e atualizados.
- Esses dados s√£o **sincronizados com o Firebase** automaticamente.
- Sempre que uma atualiza√ß√£o √© enviada ao Firebase, a lista completa dos dados √© **printada no terminal serial**, facilitando o **debug**, **registro hist√≥rico** ou **monitoramento remoto**.

---

## üîß Componentes Utilizados

- 1x **ESP32 AM032 (Ants Make)**
- 1x **Buzzer piezoel√©trico**
- 1x **Servo motor**
- 2x **LEDs RGB** (olhos)
- 1x **LED azul de alto brilho** (lanterna)
- 3x **LEDs verdes de alto brilho** (indicador de vida)
- 2x **LEDs vermelhos de alto brilho** (indicador de vida)
- 1x **Sensor LDR**
- 1x **Potenci√¥metro**
- 2x **Bot√µes t√°teis**
- Resistores de 220Œ©
- Jumpers diversos
- 1x **Placa perfurada** (para distribuir 3V3 e GND)

### üñ®Ô∏è Carca√ßa do Rob√¥
- Modelada em **Blender**
- Impressa em 3D na **Creality Ender S3 v1** com **PLA**
- Tempo total de impress√£o: **~40 horas**

---

## üöÄ Pr√≥ximos Passos

- [ ] Adicionar **reconhecimento de fala b√°sico** para comandos como ‚ÄúMurphy, fala!‚Äù ou ‚ÄúMurphy, acende a luz!‚Äù
- [ ] Adicionar **sensor de presen√ßa ou movimento (PIR ou ultrass√¥nico)** para detectar aproxima√ß√£o
- [ ] Implementar **comunica√ß√£o entre m√∫ltiplos rob√¥s via ESP-NOW** para simular intera√ß√£o entre jogadores
- [ ] Adicionar **bra√ßos articul√°veis com servos** para intera√ß√µes gestuais
- [ ] Substituir **alimenta√ß√£o USB por bateria LiPo com carregamento via cabo USB-C**

---

## üë• Equipe

- [Caio Hirata](https://github.com/Kal-0)
- [Diogo Henrique](https://github.com/DiogoHMC)
- [Pedro Coelho](https://github.com/pedro-coelho-dr)
- [Theo Moura](https://github.com/theomilll)
- [Virna Amaral](https://github.com/virnaamaral)
